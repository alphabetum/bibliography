
@article{welsh_seda:_2001,
	title = {{SEDA:} An Architecture for Well-conditioned, Scalable Internet Services},
	volume = {35},
	issn = {0163-5980},
	url = {http://doi.acm.org/10.1145/502059.502057},
	doi = {10.1145/502059.502057},
	abstract = {We propose a new design for highly concurrent Internet services, which we call the staged event-driven architecture ({SEDA).} {SEDA} is intended to support massive concurrency demands and simplify the construction of well-conditioned services. In {SEDA}, applications consist of a network of event-driven stages connected by explicit queues. This architecture allows services to be well-conditioned to load, preventing resources from being overcommitted when demand exceeds service capacity. {SEDA} makes use of a set of dynamic resource controllers to keep stages within their operating regime despite large fluctuations in load. We describe several control mechanisms for automatic tuning and load conditioning, including thread pool sizing, event batching, and adaptive load shedding. We present the {SEDA} design and an implementation of an Internet services platform based on this architecture. We evaluate the use of {SEDA} through two applications: a high-performance {HTTP} server and a packet router for the Gnutella peer-to-peer file sharing network. These results show that {SEDA} applications exhibit higher performance than traditional service designs, and are robust to huge variations in load.},
	number = {5},
	journal = {{SIGOPS} Oper. Syst. Rev.},
	author = {Welsh, Matt and Culler, David and Brewer, Eric},
	month = oct,
	year = {2001},
	pages = {230–243}
},

@techreport{gluck_breach:_2013,
	title = {Breach: Reviving the {CRIME} Attack},
	url = {http://breachattack.com/resources/BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf},
	author = {Gluck, Yoel and Harris, Neal and Prado, Angelo (Angel)},
	year = {2013}
},

@techreport{lamport_future_2003,
	title = {The Future of Computing: Logic or Biology},
	abstract = {The fundamental problem with approaching computer systems as biolog- ical systems is that it means giving up on the idea of actually understanding the systems we build. We can't make our software dependable if we don't understand it. And as our society becomes ever more dependent on computer software, that software must be dependable.},
	author = {Lamport, Leslie},
	month = jul,
	year = {2003},
	keywords = {computer-science}
},

@article{lamport_time_1978,
	title = {Time, Clocks, and the Ordering of Events in a Distributed System},
	volume = {21},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/359545.359563},
	doi = {10.1145/359545.359563},
	abstract = {The concept of one event happening before another in a distributed system is examined, and is shown to define a partial ordering of the events. A distributed algorithm is given for synchronizing a system of logical clocks which can be used to totally order the events. The use of the total ordering is illustrated with a method for solving synchronization problems. The algorithm is then specialized for synchronizing physical clocks, and a bound is derived on how far out of synchrony the clocks can become.},
	number = {7},
	journal = {Commun. {ACM}},
	author = {Lamport, Leslie},
	month = jul,
	year = {1978},
	keywords = {clock synchronization, computer networks, distributed systems, multiprocess systems},
	pages = {558–565}
},

@book{_recursive_1960,
	title = {Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I},
	abstract = {A programming system called {LISP} (for {LISt} Processor) has been developed for the {IBM} 704 computer by the Artificial Intelligence group at {M.I.T.}},
	year = {1960}
},

@article{abelson_lisp:_1988,
	title = {Lisp: A Language for Stratified Design},
	volume = {13},
	url = {http://dspace.mit.edu/handle/1721.1/6064},
	abstract = {We exhibit programs that illustrate the power of Lisp as a language for expressing the design and organization of computational systems. The examples are chosen to highlight the importance of abstraction in program design and to draw attention to the use of procedures to express abstractions.},
	number = {2},
	journal = {Byte},
	author = {Abelson, Harold and Sussman, Gerald J.},
	year = {1988},
	keywords = {abstraction, bibtex-import, design, lisp, representation, scheme, stratified},
	pages = {207--218},
	annote = {{"Just} as everyday thoughts ate expressed in natural language, and formal deductions are expressed in mathematical language, methodologica thoughts are expressed in programming languages. A programming language is a medium for communicating methods, not just a means for getting a computer to perform operations - programs are written for people to read as much as they are written for machines to execute." Meta-linguistic considerations: On comparing the virtues of different classes of languages {"Part} of the wonder of computation is that we have the freedom to change the framework b which descriptions of processed are combined. If we can percisely describe a system in any well-defined notation, then we can build an interpreter to execute programs in the new notation, or we can build a compiler to translate programs expressed in the new notation into and other programming language"}
},

@techreport{henrik_kniberg_scaling_2012,
	title = {Scaling Agile @ Spotify},
	url = {https://dl.dropbox.com/u/1018963/Articles/SpotifyScaling.pdf},
	author = {Henrik Kniberg, Anders Ivarsson},
	month = oct,
	year = {2012},
	keywords = {agile, scaling, spotify}
},

@article{dyba_empirical_2008,
	title = {Empirical studies of agile software development: A systematic review},
	volume = {50},
	issn = {0950-5849},
	url = {http://www.sciencedirect.com/science/article/pii/S0950584908000256},
	doi = {http://dx.doi.org/10.1016/j.infsof.2008.01.006},
	abstract = {Agile software development represents a major departure from traditional, plan-based approaches to software engineering. A systematic review of empirical studies of agile software development up to and including 2005 was conducted. The search strategy identified 1996 studies, of which 36 were identified as empirical studies. The studies were grouped into four themes: introduction and adoption, human and social factors, perceptions on agile methods, and comparative studies. The review investigates what is currently known about the benefits and limitations of, and the strength of evidence for, agile methods. Implications for research and practice are presented. The main implication for research is a need for more and better empirical studies of agile software development within a common research agenda. For the industrial readership, the review provides a map of findings, according to topic, that can be compared for relevance to their own settings and situations.},
	number = {9–10},
	journal = {Information and Software Technology},
	author = {Dybå, Tore and Dingsøyr, Torgeir},
	year = {2008},
	keywords = {Scrum},
	pages = {833 -- 859}
},

@inproceedings{eriksen_your_2013,
	address = {New York, {NY}, {USA}},
	series = {{PLOS} '13},
	title = {Your Server As a Function},
	isbn = {978-1-4503-2460-1},
	url = {http://doi.acm.org/10.1145/2525528.2525538},
	doi = {10.1145/2525528.2525538},
	abstract = {Building server software in a large-scale setting, where systems exhibit a high degree of concurrency and environmental variability, is a challenging task to even the most experienced programmer. Efficiency, safety, and robustness are paramount---goals which have traditionally conflicted with modularity, reusability, and flexibility.

We describe three abstractions which combine to present a powerful programming model for building safe, modular, and efficient server software: Composable futures are used to relate concurrent, asynchronous actions; services and filters are specialized functions used for the modular composition of our complex server software.

Finally, we discuss our experiences using these abstractions and techniques throughout Twitter's serving infrastructure.},
	booktitle = {Proceedings of the Seventh Workshop on Programming Languages and Operating Systems},
	publisher = {{ACM}},
	author = {Eriksen, Marius},
	year = {2013},
	pages = {5:1–5:7}
},

@inproceedings{foote_life_1995,
	title = {Life Cycle and Refactoring Patterns that Support Evolution and Reuse},
	booktitle = {First Conference on Pattern Languages of Programs ({PLoP'94}},
	publisher = {Addison-Wesley},
	author = {Foote, Brian and Opdyke, William F.},
	year = {1995},
	pages = {239–257}
},

@incollection{foote_big_2000,
	title = {Big Ball of Mud},
	volume = {4},
	url = {http://www.laputan.org/mud/mud.html},
	booktitle = {Pattern Languages of Program Design},
	publisher = {Addison-Wesley},
	author = {Foote, Brian and Yoder, Joseph W.},
	editor = {Harrison, N. and Foote, B. and Rohnert, H.},
	year = {2000},
	keywords = {design, pattern},
	pages = {654--692}
},

@inproceedings{hamilton_designing_2007,
	address = {Dallas},
	title = {On Designing and Deploying Internet-scale Services},
	isbn = {978-1-59327-152-7},
	url = {http://mvdirona.com/jrh/talksandpapers/jamesrh_lisa.pdf},
	booktitle = {{LISA'07:} Proceedings of the 21st conference on Large Installation System Administration Conference},
	publisher = {{USENIX} Association},
	author = {Hamilton, James},
	year = {2007},
	keywords = {imported},
	pages = {1–12}
},

@article{hoare_emperors_1981,
	title = {The Emperor's Old Clothes},
	volume = {24},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/358549.358561},
	doi = {10.1145/358549.358561},
	number = {2},
	journal = {Commun. {ACM}},
	author = {Hoare, Charles Antony Richard},
	month = feb,
	year = {1981},
	keywords = {history of programming languages, lessons for the future, programming languages},
	pages = {75–83}
},

@article{kowalski_algorithm_1979,
	title = {Algorithm = Logic + Control},
	volume = {22},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/359131.359136},
	doi = {10.1145/359131.359136},
	number = {7},
	journal = {Commun. {ACM}},
	author = {Kowalski, Robert},
	month = jul,
	year = {1979},
	keywords = {control language, logic programming, nonprocedural language, program specification, programming methodology, relational data structures},
	pages = {424–436}
},

@inproceedings{lampson_hints_1983,
	address = {New York, {NY}, {USA}},
	series = {{SOSP} '83},
	title = {Hints for Computer System Design},
	isbn = {0-89791-115-6},
	url = {http://doi.acm.org/10.1145/800217.806614},
	doi = {10.1145/800217.806614},
	abstract = {Experience with the design and implementation of a number of computer systems, and study of many other systems, has led to some general hints for system design which are described here. They are illustrated by a number of examples, ranging from hardware such as the Alto and the Dorado to applications programs such as Bravo and Star.},
	booktitle = {Proceedings of the Ninth {ACM} Symposium on Operating Systems Principles},
	publisher = {{ACM}},
	author = {Lampson, Butler W.},
	year = {1983},
	pages = {33–48}
},

@book{bueno_mature_????,
	title = {The Mature Optimization Handbook},
	url = {https://www.facebook.com/notes/facebook-engineering/the-mature-optimization-handbook/10151784131623920},
	author = {Bueno, Carlos}
},

@book{loudon_mastering_2009,
	title = {Mastering Algorithms with C},
	isbn = {978-0-596-10343-9},
	url = {http://shop.oreilly.com/product/9781565924536.do},
	publisher = {{O'Reilly} Media},
	author = {Loudon, Kyle},
	month = feb,
	year = {2009}
},

@book{stuart_understanding_2013,
	title = {Understanding Computation},
	isbn = {978-1-4493-3009-5},
	url = {http://shop.oreilly.com/product/0636920025481.do},
	publisher = {{O'Reilly} Media},
	author = {Stuart, Tom},
	month = may,
	year = {2013}
},

@book{anderson_security_2008,
	edition = {2},
	title = {Security Engineering},
	isbn = {978-0470068526},
	url = {http://www.cl.cam.ac.uk/~rja14/book.html},
	publisher = {Wiley},
	author = {Anderson, Ross},
	month = apr,
	year = {2008}
},

@book{easley_networks_2010,
	title = {Networks, Crowds, and Markets: Reasoning About a Highly Connected World},
	url = {http://www.cs.cornell.edu/home/kleinber/networks-book/},
	abstract = {Over the past decade there has been a growing public fascination with the complex "connectedness" of modern society. This connectedness is found in many incarnations: in the rapid growth of the Internet and the Web, in the ease with which global communication now takes place, and in the ability of news and information as well as epidemics and financial crises to spread around the world with surprising speed and intensity. These are phenomena that involve networks, incentives, and the aggregate behavior of groups of people; they are based on the links that connect us and the ways in which each of our decisions can have subtle consequences for the outcomes of everyone else.

Networks, Crowds, and Markets combines different scientific perspectives in its approach to understanding networks and behavior. Drawing on ideas from economics, sociology, computing and information science, and applied mathematics, it describes the emerging field of study that is growing at the interface of all these areas, addressing fundamental questions about how the social, economic, and technological worlds are connected.

The book is based on an inter-disciplinary course entitled Networks that we teach at Cornell. The book, like the course, is designed at the introductory undergraduate level with no formal prerequisites. To support deeper explorations, most of the chapters are supplemented with optional advanced sections.},
	publisher = {Cambridge University Press},
	author = {Easley, David and Kleinberg, Jon},
	year = {2010}
},

@misc{yegge_its_2004,
	title = {It's Not Software},
	url = {https://sites.google.com/site/steveyegge2/its-not-software},
	author = {Yegge, Steve},
	month = oct,
	year = {2004}
},

@misc{yegge_not_2006,
	title = {(Not) Managing Software Developers},
	url = {http://steve-yegge.blogspot.com/2006/05/not-managing-software-developers.html},
	journal = {Stevey's Blog Rants},
	author = {Yegge, Steve},
	month = may,
	year = {2006}
},

@book{barlow_culture_2013,
	title = {The Culture of Big Data},
	url = {http://www.oreilly.com/data/free/culture-of-big-data.csp},
	abstract = {Technology does not exist in a vacuum. In the same way that a plant needs water and nourishment to grow, technology needs people and process to thrive and succeed. Culture (i.e., people and process) is integral and critical to the success of any new technology deployment or implementation.

Big data is not just a technology phenomenon. It has a cultural dimension. It's vitally important to remember that most people have not considered the immense difference between a world seen through the lens of a traditional relational database system and a world seen through the lens of a Hadoop Distributed File System. This paper broadly describes the cultural challenges that accompany efforts to create and sustain big data initiatives in an evolving world whose data management processes are rooted firmly in traditional data warehouse architectures.},
	publisher = {{O'Reilly}},
	author = {Barlow, Mike},
	month = oct,
	year = {2013}
},

@book{phipps_open_2012,
	title = {Open Source Strategies for the Enterprise},
	url = {http://shop.oreilly.com/product/0636920027379.do},
	publisher = {{O'Reilly} Media},
	author = {Phipps, Simon},
	month = jul,
	year = {2012}
},

@book{t-hebert_learn_2013,
	title = {Learn You Some Erlang for Great Good!},
	url = {http://learnyousomeerlang.com/},
	publisher = {No Starch Press},
	author = {T-Hebert, Ferd},
	month = jan,
	year = {2013}
},

@misc{crawford_why_2013,
	title = {Why mobile web apps are slow},
	url = {http://sealedabstract.com/rants/why-mobile-web-apps-are-slow/},
	journal = {Sealed Abstract},
	author = {Crawford, Drew},
	month = jul,
	year = {2013}
},

@misc{yegge_steveys_????,
	title = {Stevey's Google Platforms Rant},
	url = {https://plus.google.com/+RipRowan/posts/eVeouesvaVX},
	author = {Yegge, Steve}
},

@book{kniberg_lean_2011,
	title = {Lean from the Trenches: Managing Large-Scale Projects with Kanban},
	url = {http://pragprog.com/book/hklean/lean-from-the-trenches},
	abstract = {You know the Agile and Lean development buzzwords, you’ve read the books. But when systems need a serious overhaul, you need to see how it works in real life, with real situations and people. Lean from the Trenches is all about actual practice. Every key point is illustrated with a photo or diagram, and anecdotes bring you inside the project as you discover why and how one organization modernized its workplace in record time.},
	publisher = {The Pragmatic Bookshelf},
	author = {Kniberg, Henrik},
	month = dec,
	year = {2011}
},

@misc{parlante_pointers_????,
	title = {Pointers and Memory},
	url = {http://cslibrary.stanford.edu/102/PointersAndMemory.pdf},
	author = {Parlante, Nick}
},

@misc{parlante_essential_2003,
	title = {Essential C},
	url = {http://cslibrary.stanford.edu/101/EssentialC.pdf},
	author = {Parlante, Nick},
	year = {2003}
},

@misc{graham_roots_2001,
	title = {The Roots of Lisp},
	url = {http://www.paulgraham.com/rootsoflisp.html},
	author = {Graham, Paul},
	month = may,
	year = {2001}
},

@article{mccarthy_history_1978,
	title = {History of {LISP}},
	volume = {13},
	issn = {0362-1340},
	url = {http://doi.acm.org/10.1145/960118.808387},
	doi = {10.1145/960118.808387},
	number = {8},
	journal = {{SIGPLAN} Not.},
	author = {{McCarthy}, John},
	month = aug,
	year = {1978},
	pages = {217–223},
	annote = {Paper available at: http://innovation.it.uts.edu.au/projectjmc/articles/lisp.html
 }
},

@book{schinz_scala_????,
	title = {A Scala Tutorial for Java programmers},
	url = {http://www.scala-lang.org/docu/files/ScalaTutorial.pdf},
	author = {Schinz, Michel and Haller, Philipp}
},

@misc{volkmann_clojure_2013,
	title = {Clojure - Functional Programming for the {JVM}},
	url = {http://java.ociweb.com/mark/clojure/article.html},
	author = {Volkmann, R. Mark},
	month = jun,
	year = {2013}
},

@book{henney_97_2010,
	title = {97 Things Every Programmer Should Know},
	url = {http://shop.oreilly.com/product/9780596809492.do},
	publisher = {{O'Reilly} Media},
	author = {Henney, Kevlin},
	month = feb,
	year = {2010}
},

@book{doxsey_introduction_2012,
	title = {An introduction to programming in Go},
	url = {http://www.golang-book.com/},
	author = {Doxsey, Caleb},
	year = {2012}
},

@techreport{loukides_what_2012,
	title = {What is {DevOps?}},
	url = {http://shop.oreilly.com/product/0636920026822.do?intcmp=il-velocity-books-what-is-devops-radar-edition},
	abstract = {Have we entered the age of {NoOps} infrastructures? Hardly. Old-style system administrators may be disappearing in the face of automation and cloud computing, but operations have become more significant than ever. As this {O’Reilly} Radar Report explains, we’re moving into a more complex arrangement known as {"DevOps."}

Mike Loukides, {O’Reilly’s} {VP} of Content Strategy, provides an incisive look into this new world of operations, where {IT} specialists are becoming part of the development team. In an environment with thousands of servers, these specialists now write the code that maintains the infrastructure. Even applications that run in the cloud have to be resilient and fault tolerant, need to be monitored, and must adjust to huge swings in load. That was underscored by Amazon’s {EBS} outage last year.

From the discussions at {O’Reilly’s} Velocity Conference, it’s evident that many operations specialists are quickly adapting to the {DevOps} reality. But as a whole, the industry has just scratched the surface. This report tells you why.},
	institution = {{O'Reilly} Media},
	author = {Loukides, Mike},
	month = jun,
	year = {2012}
},

@book{braithwaite_what_2012,
	title = {What I've Learned From Failure: A quarter-century of experience shipping software, distilled into fixnum bittersweet essays},
	url = {https://leanpub.com/shippingsoftware},
	publisher = {Leanpub},
	author = {Braithwaite, Reg {"Raganwald"}},
	month = jan,
	year = {2012}
},

@book{rauschmayer_past_2012,
	title = {The Past, Present, and Future of {JavaScript}},
	url = {http://www.oreilly.com/programming/free/past-present-future-javascript.csp},
	publisher = {{O'Reilly}},
	author = {Rauschmayer, Axel},
	month = jul,
	year = {2012}
},

@techreport{hendrickson_economic_2012,
	title = {Economic Impact of Open Source on Small Business: A Case Study},
	url = {http://oreilly.com/opensource/radarreports/economic-impact-of-open-source.html},
	institution = {{O'Reilly}},
	author = {Hendrickson, Mike and Magoulas, Roger and {O'Reilly}, Tim},
	month = jul,
	year = {2012}
},

@techreport{barlow_changing_2013,
	title = {The Changing Role of the {CIO}},
	url = {http://shop.oreilly.com/product/0636920032120.do},
	abstract = {Does Big Data represent an existential threat to {CIOs?} Yes, quite possibly. For the past three decades, corporate {CIOs} have served primarily as stewards and guardians of {IT} infrastructure. Big Data -- together with cloud, social and mobile computing -- throws the value of legacy {IT} infrastructure into question and undermines the traditional authority of {CIOs} over the systems they have championed. For corporate {CIOs}, getting comfortable with Big Data will require reaching beyond the traditional comfort zone of {IT} and learning a new language that combines business, math and behavioral science, with signficantly less emphasis on traditional infrastructure technology than in the past. Will {CIOs} be ready and willing to make the leap?},
	institution = {{O'Reilly} Media},
	author = {Barlow, Mike},
	month = nov,
	year = {2013}
}